# vim:set ft=dockerfile:
FROM debian:buster-slim

# prepare
RUN set -ex; \
    apt-get update ; \
    apt-get autoremove -y ; \
	savedAptMark="$(apt-mark showmanual)"; \

# grab 
RUN apt-get install -y --no-install-recommends \
			dirmngr gnupg ca-certificates \
            curl wget \ ; 

# gosu for easy step-down from root
# https://github.com/tianon/gosu/releases
# tianon public-key B42F6819007F00F88E364FD4036A9C25BF357DD4
ENV GOSU_VERSION 1.12
RUN set -eux; \
	dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
	wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
	wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
	gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
	gpgconf --kill all; \
	rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc; \
	chmod +x /usr/local/bin/gosu; \
	gosu --version; \
	gosu nobody true

# cleanup
RUN set -ex ; \
    apt-mark auto '.*' > /dev/null; [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	rm -rf /var/lib/apt/lists/*; \

# make the "en_US.UTF-8" locale so utf-8 enabled by default
RUN set -eux; \
	if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \
# if this file exists, we're likely in "debian:xxx-slim", and locales are thus being excluded so we need to remove that exclusion (since we need locales)
		grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \
		sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \
		! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \
	fi; \
	apt-get update; apt-get install -y --no-install-recommends locales; rm -rf /var/lib/apt/lists/*; \
	localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ENV LANG en_US.utf8

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
# install "nss_wrapper" in case we need to fake "/etc/passwd" and "/etc/group" (especially for OpenShift)
# https://github.com/docker-library/postgres/issues/359
# https://cwrap.org/nss_wrapper.html
		libnss-wrapper \
# install "xz-utils" for .sql.xz docker-entrypoint-initdb.d files
		xz-utils ; \
	    rm -rf /var/lib/apt/lists/*

# sane 1
RUN mkdir -p /usr/share/man/man1

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends openjdk-11-jre ; \
    apt-get autoremove -y ; \
	rm -rf /var/lib/apt/lists/*

# simplify
ENV JAVA_HOME /usr/lib/java
RUN ln -snf /usr/lib/jvm/java-11-openjdk-amd64/ /usr/lib/java

#sane 2
RUN rm -rf /usr/share/man/*

WORKDIR /

RUN mkdir /docker-entrypoint-initdb.d

COPY docker-entrypoint.sh /

ENTRYPOINT ["/docker-entrypoint.sh"]

CMD [" stay alive "]


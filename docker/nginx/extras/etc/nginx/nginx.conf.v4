
user nginx nginx;

worker_processes 1;

error_log   /var/log/nginx/error.log info;

pid         /var/run/nginx.pid;

events {

    worker_connections 1024;

    use epoll;
}   

http {

    charset UTF-8;

    include /etc/nginx/mime.types;
	
    default_type application/octet-stream;

    index index.html index.htm ;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    error_log /var/log/nginx/error.log;

	gzip off;

	sendfile on;
#	tcp_nopush on;
#	tcp_nodelay on;

	ignore_invalid_headers on;

	index index.html index.htm ;

    error_page  404              /404.html;

    error_page  500 502 503 504  /50x.html;

    upstream geonode {
        server 127.0.0.1:88 ;
        }

	server {

		listen 80 default_server ;

		listen 443 ssl default_server;

		server_name _ ;

        root    /usr/share/nginx/html ;
        
        #return 301 https://$host$request_uri

ssl_certificate /etc/nginx/ssl/localhost.crt;
ssl_certificate_key /etc/nginx/ssl/localhost.key;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:20m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;

ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';


#ssl_trusted_certificate /root/certs/APPNAME/APPNAME_nl.chained.crt;


        location / {

            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
                add_header Access-Control-Allow-Credentials true;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                add_header Access-Control-Max-Age 1728000;
                return 200;
            }

#        try_files $uri $uri/ =404 ;    

        }    


        location /geonode {

            #etag off;
            
            expires 0;
 
            proxy_pass http://localhost:88/ ;
            proxy_set_header   Host localhost;
            proxy_set_header   X-Real-IP $remote_addr;

#            proxy_redirect     off;
#            proxy_set_header   Host $host;
#            proxy_set_header   X-Real-IP $remote_addr;
#            proxy_redirect http://localhost $scheme:// ;

#            proxy_buffering off;
#            proxy_pass_request_headers on;
#            proxy_set_header Host $host;
            }

        location /geoserver {

             #etag off;

             expires 0;
             
             proxy_pass http://localhost:88/geoserver ;

#             proxy_redirect     off;
#             proxy_set_header   Host $host;
#             proxy_set_header   X-Real-IP $remote_addr;
#             proxy_redirect http://localhost $scheme:// ;

#             proxy_buffering off;
#             proxy_pass_request_headers on;
#             proxy_set_header Host $host;
  
            }

    #etag on;

    client_max_body_size 100M;
    client_body_buffer_size 128K;

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    uwsgi_read_timeout          600;

    expires 1d;
    
    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

	}

   
   include /etc/nginx/conf.d/*.conf;

}
